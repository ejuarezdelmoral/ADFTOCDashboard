{
	"name": "US Major Incidents DataFlow",
	"properties": {
		"folder": {
			"name": "file uploads"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "us_incident_actual_JSON",
						"type": "DatasetReference"
					},
					"name": "USIncidentActual"
				},
				{
					"dataset": {
						"referenceName": "us_incident_display_JSON",
						"type": "DatasetReference"
					},
					"name": "USIncidentDisplay"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlUSIncident",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "join1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          result as (short_description as string, assignment_group as (link as string, value as string), u_is_the_incident_caused_by_a_change as string, u_toc_awareness_time as string, sys_updated_on as string, calendar_duration as string, priority as string, sys_tags as string, sys_id as string, number as string, resolved_by as (link as string, value as string), contact_type as string, opened_by as (link as string, value as string), sys_created_on as string, resolved_at as string, major_incident_state as string, sys_created_by as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> USIncidentActual",
				"source(output(",
				"          result as (sys_id as string, resolved_by as (display_value as string, link as string), assignment_group as (display_value as string, link as string), opened_by as (display_value as string, link as string))[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> USIncidentDisplay",
				"USIncidentActual foldDown(unroll(result, result),",
				"     mapColumn(",
				"          short_description = result.short_description,",
				"          u_is_the_incident_caused_by_a_change = result.u_is_the_incident_caused_by_a_change,",
				"          u_toc_awareness_time = result.u_toc_awareness_time,",
				"          sys_updated_on = result.sys_updated_on,",
				"          calendar_duration = result.calendar_duration,",
				"          priority = result.priority,",
				"          sys_tags = result.sys_tags,",
				"          sys_id = result.sys_id,",
				"          number = result.number,",
				"          contact_type = result.contact_type,",
				"          sys_created_on = result.sys_created_on,",
				"          resolved_at = result.resolved_at,",
				"          major_incident_state = result.major_incident_state,",
				"          sys_created_by = result.sys_created_by",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"join1 derive(updated_new = toTimestamp(toString(sys_updated_on), 'yyyy-MM-dd HH:mm:ss'),",
				"          sys_created_on = toTimestamp(sys_created_on, 'yyyy-MM-dd HH:mm:ss'),",
				"          u_toc_awareness_time = toTimestamp(u_toc_awareness_time, 'yyyy-MM-dd HH:mm:ss'),",
				"          resolved_at = toTimestamp(resolved_at, 'yyyy-MM-dd HH:mm:ss'),",
				"          calendar_duration = toTimestamp(calendar_duration, 'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
				"USIncidentDisplay foldDown(unroll(result, result),",
				"     mapColumn(",
				"          sys_id = result.sys_id,",
				"          resolved_by = result.resolved_by.display_value,",
				"          assignment_group = result.assignment_group.display_value,",
				"          opened_by = result.opened_by.display_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"flatten1, flatten2 join(flatten1@sys_id == flatten2@sys_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          sys_id as string,",
				"          number as string,",
				"          sys_created_on as timestamp,",
				"          u_toc_awareness_time as timestamp,",
				"          assignment_group as string,",
				"          major_incident_state as string,",
				"          short_description as string,",
				"          sys_created_by as string,",
				"          sys_updated_on as string,",
				"          resolved_by as string,",
				"          opened_by as string,",
				"          resolved_at as timestamp,",
				"          priority as string,",
				"          calendar_duration as timestamp,",
				"          contact_type as string,",
				"          updated_new as string,",
				"          caused_by_change as string,",
				"          sys_tags as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          sys_id = flatten1@sys_id,",
				"          number_value = number,",
				"          sys_created_on_value = sys_created_on,",
				"          u_toc_awareness_time_value = u_toc_awareness_time,",
				"          assignment_group_value = assignment_group,",
				"          major_incident_state_value = major_incident_state,",
				"          short_description_value = short_description,",
				"          sys_created_by_value = sys_created_by,",
				"          sys_updated_on_value = sys_updated_on,",
				"          resolved_by_value = resolved_by,",
				"          opened_by_value = opened_by,",
				"          resolved_at_value = resolved_at,",
				"          priority_value = priority,",
				"          calendar_duration_value = calendar_duration,",
				"          contact_type_value = contact_type,",
				"          updated_new,",
				"          caused_by_change_value = u_is_the_incident_caused_by_a_change,",
				"          sys_tags_value = sys_tags",
				"     )) ~> sink1"
			]
		}
	}
}