{
	"name": "SL Global Tasks",
	"properties": {
		"activities": [
			{
				"name": "SL Global Tasks",
				"description": "From Task_list.do from Global  Service Now",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Contents in SL Global Task Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "Instance",
								"value": {
									"value": "@pipeline().parameters.Instance_name",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "GlobalSNOWRESTDataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete Contents in SL Global Task Table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_delete_SL_Global]"
				},
				"linkedServiceName": {
					"referenceName": "TOCDataBase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SL Global Changes",
				"description": "From Change Request list from Global  Service Now",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Contents in SL Global Task Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "Instance",
								"value": {
									"value": "@pipeline().parameters.Instance_name",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "GlobalSNOWRESTDataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SL Global Major Incidents",
				"description": "Global Rest call to copy the display entries from Incident table.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Contents in SL Global Task Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "Instance",
								"value": {
									"value": "@pipeline().parameters.Instance_name",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true
				},
				"inputs": [
					{
						"referenceName": "GlobalSNOWRESTDataset",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"Instance_name": {
				"type": "string",
				"defaultValue": "Global"
			}
		},
		"folder": {
			"name": "Shift Lead Dashboard/Global"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-02T18:56:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}